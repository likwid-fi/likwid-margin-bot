/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  LikwidPancakeswap,
  LikwidPancakeswapInterface,
} from "../LikwidPancakeswap";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_wrapNative",
        type: "address",
        internalType: "address",
      },
      {
        name: "_likwidRouter",
        type: "address",
        internalType: "contract ILikwidRouter",
      },
      {
        name: "router",
        type: "address",
        internalType: "contract IUniversalRouter",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "callers",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "likwidRouter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ILikwidRouter",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "likwidToPancakeswap",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        internalType: "address",
      },
      {
        name: "fee",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "likwidIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "likwidOutMin",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pancakesOutMin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "likwidOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pancakesOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pancakeswapToLikwid",
    inputs: [
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        internalType: "address",
      },
      {
        name: "fee",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "pancakesIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pancakesOutMin",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "likwidOutMin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "pancakesOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "likwidOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swap",
    inputs: [
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        internalType: "address",
      },
      {
        name: "fee",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amountOutMin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "universalRouter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IUniversalRouter",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "currency",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "wrapNative",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60e060405234801561000f575f5ffd5b5060405161268d38038061268d8339818101604052810190610031919061029f565b83838382805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506001805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050505050610303565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101f8826101cf565b9050919050565b610208816101ee565b8114610212575f5ffd5b50565b5f81519050610223816101ff565b92915050565b5f610233826101ee565b9050919050565b61024381610229565b811461024d575f5ffd5b50565b5f8151905061025e8161023a565b92915050565b5f61026e826101ee565b9050919050565b61027e81610264565b8114610288575f5ffd5b50565b5f8151905061029981610275565b92915050565b5f5f5f5f608085870312156102b7576102b66101cb565b5b5f6102c487828801610215565b94505060206102d587828801610215565b93505060406102e687828801610250565b92505060606102f78782880161028b565b91505092959194509250565b60805160a05160c05161231a6103735f395f818161028b01528181610f220152610f6a01525f81816102670152818161046b0152818161053c015281816107a901526107f201525f818161035101528181610b6401528181610bbf015281816112f801526113ad015261231a5ff3fe608060405260043610610094575f3560e01c8063863f1d4911610058578063863f1d49146101895780638da5cb5b146101ba578063bd199bd3146101e4578063f2fde38b14610215578063f3fef3a31461023d5761009b565b806334dc04151461009f57806335a9e4df146100c95780633bf237d5146100f35780636ad481f3146101235780637bbf4a3f1461014d5761009b565b3661009b57005b5f5ffd5b3480156100aa575f5ffd5b506100b3610265565b6040516100c091906115a4565b60405180910390f35b3480156100d4575f5ffd5b506100dd610289565b6040516100ea91906115dd565b60405180910390f35b61010d600480360381019061010891906116a0565b6102ad565b60405161011a9190611726565b60405180910390f35b34801561012e575f5ffd5b5061013761034f565b604051610144919061174e565b60405180910390f35b348015610158575f5ffd5b50610173600480360381019061016e9190611767565b610373565b60405161018091906117ac565b60405180910390f35b6101a3600480360381019061019e91906117f8565b610390565b6040516101b1929190611895565b60405180910390f35b3480156101c5575f5ffd5b506101ce610631565b6040516101db919061174e565b60405180910390f35b6101fe60048036038101906101f991906118bc565b610655565b60405161020c929190611895565b60405180910390f35b348015610220575f5ffd5b5061023b60048036038101906102369190611767565b6108f6565b005b348015610248575f5ffd5b50610263600480360381019061025e9190611959565b610a20565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032e906119f1565b60405180910390fd5b6103448686868686610b20565b905095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661041b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610412906119f1565b60405180910390fd5b6104288989898888610b20565b91505f5f73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1603610466578290506104b2565b6104b17f0000000000000000000000000000000000000000000000000000000000000000848b73ffffffffffffffffffffffffffffffffffffffff166110e79092919063ffffffff16565b5b5f6040518060e001604052808981526020018c73ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1610151581526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018681526020015f81526020016064426105359190611a3c565b81525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c1991c3183836040518363ffffffff1660e01b81526004016105949190611b48565b60206040518083038185885af11580156105b0573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906105d59190611b75565b92505f8511156106235784831015610622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061990611bea565b60405180910390fd5b5b505097509795505050505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d7906119f1565b60405180910390fd5b5f6040518060e001604052808b81526020018973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1610151581526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020015f81526020016064426107639190611a3c565b81525090505f5f73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16036107a4578690506107f0565b6107ef7f0000000000000000000000000000000000000000000000000000000000000000888c73ffffffffffffffffffffffffffffffffffffffff166110e79092919063ffffffff16565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c1991c3182846040518363ffffffff1660e01b815260040161084a9190611b48565b60206040518083038185885af1158015610866573d5f5f3e3d5ffd5b50505050506040513d601f19601f8201168201806040525081019061088b9190611b75565b935061089a898b8a8789610b20565b92505f8511156108e857848310156108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de90611c52565b60405180910390fd5b5b505097509795505050505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610984576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097b906119f1565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa5906119f1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af057610aeb33826111f4565b610b1c565b610b1b33828473ffffffffffffffffffffffffffffffffffffffff166112449092919063ffffffff16565b5b5050565b5f610b2b86846112c3565b5f8690505f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610b86577f000000000000000000000000000000000000000000000000000000000000000090505b5f8690505f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610be1577f000000000000000000000000000000000000000000000000000000000000000090505b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4690611cba565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c89919061174e565b602060405180830381865afa158015610ca4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc89190611b75565b905060605f600167ffffffffffffffff811115610ce857610ce7611cd8565b5b604051908082528060200260200182016040528015610d1b57816020015b6060815260200190600190039081610d065790505b5090505f8962ffffff161115610dc4575f60f81b604051602001610d3f9190611d50565b60405160208183030381529060405291505f858a86604051602001610d6693929190611de3565b604051602081830303815290604052905060018989835f604051602001610d91959493929190611e8f565b604051602081830303815290604052825f81518110610db357610db2611ee7565b5b602002602001018190525050610f1d565b600860f81b604051602001610dd99190611d50565b60405160208183030381529060405291505f600267ffffffffffffffff811115610e0657610e05611cd8565b5b604051908082528060200260200182016040528015610e345781602001602082028036833780820191505090505b50905085815f81518110610e4b57610e4a611ee7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508481600181518110610e9a57610e99611ee7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018989835f604051602001610eee959493929190611fbc565b604051602081830303815290604052825f81518110610f1057610f0f611ee7565b5b6020026020010181905250505b610f687f0000000000000000000000000000000000000000000000000000000000000000898773ffffffffffffffffffffffffffffffffffffffff166112449092919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633593564c8383606442610fb39190611a3c565b6040518463ffffffff1660e01b8152600401610fd193929190612117565b5f604051808303815f87803b158015610fe8575f5ffd5b505af1158015610ffa573d5f5f3e3d5ffd5b50505050828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611038919061174e565b602060405180830381865afa158015611053573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110779190611b75565b611081919061215a565b95505f8711156110cf57868610156110ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c5906121d7565b60405180910390fd5b5b6110d98a87611378565b505050505095945050505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b384846040516024016111179291906121f5565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506111658482611436565b6111ee576111e3848573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3865f60405160240161119c929190612255565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061148f565b6111ed848261148f565b5b50505050565b5f5f5f5f5f85875af190508061123f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611236906122c6565b60405180910390fd5b505050565b6112be838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016112779291906121f5565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061148f565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611374577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b15801561135c575f5ffd5b505af115801561136e573d5f5f3e3d5ffd5b50505050505b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611432577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016114049190611726565b5f604051808303815f87803b15801561141b575f5ffd5b505af115801561142d573d5f5f3e3d5ffd5b505050505b5050565b5f5f5f5f60205f8651602088015f8a5af192503d91505f51905082801561148457505f82146114685760018114611483565b5f8673ffffffffffffffffffffffffffffffffffffffff163b115b5b935050505092915050565b5f5f60205f8451602086015f885af1806114ae576040513d5f823e3d81fd5b3d92505f519150505f82146114c75760018114156114e2565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561152457836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161151b919061174e565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61156c6115676115628461152a565b611549565b61152a565b9050919050565b5f61157d82611552565b9050919050565b5f61158e82611573565b9050919050565b61159e81611584565b82525050565b5f6020820190506115b75f830184611595565b92915050565b5f6115c782611573565b9050919050565b6115d7816115bd565b82525050565b5f6020820190506115f05f8301846115ce565b92915050565b5f5ffd5b5f6116048261152a565b9050919050565b611614816115fa565b811461161e575f5ffd5b50565b5f8135905061162f8161160b565b92915050565b5f62ffffff82169050919050565b61164c81611635565b8114611656575f5ffd5b50565b5f8135905061166781611643565b92915050565b5f819050919050565b61167f8161166d565b8114611689575f5ffd5b50565b5f8135905061169a81611676565b92915050565b5f5f5f5f5f60a086880312156116b9576116b86115f6565b5b5f6116c688828901611621565b95505060206116d788828901611621565b94505060406116e888828901611659565b93505060606116f98882890161168c565b925050608061170a8882890161168c565b9150509295509295909350565b6117208161166d565b82525050565b5f6020820190506117395f830184611717565b92915050565b611748816115fa565b82525050565b5f6020820190506117615f83018461173f565b92915050565b5f6020828403121561177c5761177b6115f6565b5b5f61178984828501611621565b91505092915050565b5f8115159050919050565b6117a681611792565b82525050565b5f6020820190506117bf5f83018461179d565b92915050565b5f819050919050565b6117d7816117c5565b81146117e1575f5ffd5b50565b5f813590506117f2816117ce565b92915050565b5f5f5f5f5f5f5f60e0888a031215611813576118126115f6565b5b5f6118208a828b01611621565b97505060206118318a828b01611621565b96505060406118428a828b01611659565b95505060606118538a828b016117e4565b94505060806118648a828b0161168c565b93505060a06118758a828b0161168c565b92505060c06118868a828b0161168c565b91505092959891949750929550565b5f6040820190506118a85f830185611717565b6118b56020830184611717565b9392505050565b5f5f5f5f5f5f5f60e0888a0312156118d7576118d66115f6565b5b5f6118e48a828b016117e4565b97505060206118f58a828b01611621565b96505060406119068a828b01611621565b95505060606119178a828b01611659565b94505060806119288a828b0161168c565b93505060a06119398a828b0161168c565b92505060c061194a8a828b0161168c565b91505092959891949750929550565b5f5f6040838503121561196f5761196e6115f6565b5b5f61197c85828601611621565b925050602061198d8582860161168c565b9150509250929050565b5f82825260208201905092915050565b7f554e415554484f52495a454400000000000000000000000000000000000000005f82015250565b5f6119db600c83611997565b91506119e6826119a7565b602082019050919050565b5f6020820190508181035f830152611a08816119cf565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a468261166d565b9150611a518361166d565b9250828201905080821115611a6957611a68611a0f565b5b92915050565b5f611a79826117c5565b9050919050565b611a8981611a6f565b82525050565b611a9881611792565b82525050565b611aa7816115fa565b82525050565b611ab68161166d565b82525050565b60e082015f820151611ad05f850182611a80565b506020820151611ae36020850182611a8f565b506040820151611af66040850182611a9e565b506060820151611b096060850182611aad565b506080820151611b1c6080850182611aad565b5060a0820151611b2f60a0850182611aad565b5060c0820151611b4260c0850182611aad565b50505050565b5f60e082019050611b5b5f830184611abc565b92915050565b5f81519050611b6f81611676565b92915050565b5f60208284031215611b8a57611b896115f6565b5b5f611b9784828501611b61565b91505092915050565b7f496e73756666696369656e744c696b7769644f757400000000000000000000005f82015250565b5f611bd4601583611997565b9150611bdf82611ba0565b602082019050919050565b5f6020820190508181035f830152611c0181611bc8565b9050919050565b7f496e73756666696369656e7450616e63616b65734f75744d696e0000000000005f82015250565b5f611c3c601a83611997565b9150611c4782611c08565b602082019050919050565b5f6020820190508181035f830152611c6981611c30565b9050919050565b7f504149525f4552524f52000000000000000000000000000000000000000000005f82015250565b5f611ca4600a83611997565b9150611caf82611c70565b602082019050919050565b5f6020820190508181035f830152611cd181611c98565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b5f819050919050565b611d4a611d4582611d05565b611d30565b82525050565b5f611d5b8284611d39565b60018201915081905092915050565b5f8160601b9050919050565b5f611d8082611d6a565b9050919050565b5f611d9182611d76565b9050919050565b611da9611da4826115fa565b611d87565b82525050565b5f8160e81b9050919050565b5f611dc582611daf565b9050919050565b611ddd611dd882611635565b611dbb565b82525050565b5f611dee8286611d98565b601482019150611dfe8285611dcc565b600382019150611e0e8284611d98565b601482019150819050949350505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611e6182611e1f565b611e6b8185611e29565b9350611e7b818560208601611e39565b611e8481611e47565b840191505092915050565b5f60a082019050611ea25f83018861173f565b611eaf6020830187611717565b611ebc6040830186611717565b8181036060830152611ece8185611e57565b9050611edd608083018461179d565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f611f488383611a9e565b60208301905092915050565b5f602082019050919050565b5f611f6a82611f14565b611f748185611f1e565b9350611f7f83611f2e565b805f5b83811015611faf578151611f968882611f3d565b9750611fa183611f54565b925050600181019050611f82565b5085935050505092915050565b5f60a082019050611fcf5f83018861173f565b611fdc6020830187611717565b611fe96040830186611717565b8181036060830152611ffb8185611f60565b905061200a608083018461179d565b9695505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f82825260208201905092915050565b5f61205782611e1f565b612061818561203d565b9350612071818560208601611e39565b61207a81611e47565b840191505092915050565b5f612090838361204d565b905092915050565b5f602082019050919050565b5f6120ae82612014565b6120b8818561201e565b9350836020820285016120ca8561202e565b805f5b8581101561210557848403895281516120e68582612085565b94506120f183612098565b925060208a019950506001810190506120cd565b50829750879550505050505092915050565b5f6060820190508181035f83015261212f8186611e57565b9050818103602083015261214381856120a4565b90506121526040830184611717565b949350505050565b5f6121648261166d565b915061216f8361166d565b925082820390508181111561218757612186611a0f565b5b92915050565b7f496e73756666696369656e74416d6f756e744f757400000000000000000000005f82015250565b5f6121c1601583611997565b91506121cc8261218d565b602082019050919050565b5f6020820190508181035f8301526121ee816121b5565b9050919050565b5f6040820190506122085f83018561173f565b6122156020830184611717565b9392505050565b5f819050919050565b5f61223f61223a6122358461221c565b611549565b61166d565b9050919050565b61224f81612225565b82525050565b5f6040820190506122685f83018561173f565b6122756020830184612246565b9392505050565b7f4554485f5452414e534645525f4641494c4544000000000000000000000000005f82015250565b5f6122b0601383611997565b91506122bb8261227c565b602082019050919050565b5f6020820190508181035f8301526122dd816122a4565b905091905056fea26469706673582212202405339056f9143047f57d6f2b6a5b69f979b941471fd1e5976422bbce2b6d3764736f6c634300081c0033";

type LikwidPancakeswapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LikwidPancakeswapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LikwidPancakeswap__factory extends ContractFactory {
  constructor(...args: LikwidPancakeswapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _wrapNative: AddressLike,
    _likwidRouter: AddressLike,
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _wrapNative,
      _likwidRouter,
      router,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _wrapNative: AddressLike,
    _likwidRouter: AddressLike,
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      _wrapNative,
      _likwidRouter,
      router,
      overrides || {}
    ) as Promise<
      LikwidPancakeswap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LikwidPancakeswap__factory {
    return super.connect(runner) as LikwidPancakeswap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LikwidPancakeswapInterface {
    return new Interface(_abi) as LikwidPancakeswapInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LikwidPancakeswap {
    return new Contract(address, _abi, runner) as unknown as LikwidPancakeswap;
  }
}
