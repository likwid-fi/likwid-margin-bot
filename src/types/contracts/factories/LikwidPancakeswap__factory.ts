/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  LikwidPancakeswap,
  LikwidPancakeswapInterface,
} from "../LikwidPancakeswap";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_wrapNative",
        type: "address",
        internalType: "address",
      },
      {
        name: "_likwidRouter",
        type: "address",
        internalType: "contract ILikwidRouter",
      },
      {
        name: "router",
        type: "address",
        internalType: "contract IUniversalRouter",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "likwidRouter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ILikwidRouter",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "likwidToPancakeswap",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        internalType: "address",
      },
      {
        name: "fee",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "likwidIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "likwidOutMin",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pancakesOutMin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "likwidOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pancakesOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pancakeswapToLikwid",
    inputs: [
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        internalType: "address",
      },
      {
        name: "fee",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "pancakesIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pancakesOutMin",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "likwidOutMin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "pancakesOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "likwidOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapV3",
    inputs: [
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        internalType: "address",
      },
      {
        name: "fee",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amountOutMin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "universalRouter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IUniversalRouter",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "currency",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "wrapNative",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60e060405234801561000f575f5ffd5b506040516120db3803806120db8339818101604052810190610031919061024b565b83838382805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050506102af565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101a48261017b565b9050919050565b6101b48161019a565b81146101be575f5ffd5b50565b5f815190506101cf816101ab565b92915050565b5f6101df8261019a565b9050919050565b6101ef816101d5565b81146101f9575f5ffd5b50565b5f8151905061020a816101e6565b92915050565b5f61021a8261019a565b9050919050565b61022a81610210565b8114610234575f5ffd5b50565b5f8151905061024581610221565b92915050565b5f5f5f5f6080858703121561026357610262610177565b5b5f610270878288016101c1565b9450506020610281878288016101c1565b9350506040610292878288016101fc565b92505060606102a387828801610237565b91505092959194509250565b60805160a05160c051611dbc61031f5f395f818161024401528181610bac0152610bf401525f81816102200152818161038301528181610454015281816105ec015261063501525f818161030f0152818161095b015281816109b601528181610f8301526110380152611dbc5ff3fe608060405260043610610089575f3560e01c8063863f1d4911610058578063863f1d49146101425780638da5cb5b14610173578063bd199bd31461019d578063f2fde38b146101ce578063f3fef3a3146101f657610090565b806334dc04151461009457806335a9e4df146100be578063631caa69146100e85780636ad481f31461011857610090565b3661009057005b5f5ffd5b34801561009f575f5ffd5b506100a861021e565b6040516100b5919061122f565b60405180910390f35b3480156100c9575f5ffd5b506100d2610242565b6040516100df9190611268565b60405180910390f35b61010260048036038101906100fd919061132b565b610266565b60405161010f91906113b1565b60405180910390f35b348015610123575f5ffd5b5061012c61030d565b60405161013991906113d9565b60405180910390f35b61015c60048036038101906101579190611425565b610331565b60405161016a9291906114c2565b60405180910390f35b34801561017e575f5ffd5b506101876104fd565b60405161019491906113d9565b60405180910390f35b6101b760048036038101906101b291906114e9565b610521565b6040516101c59291906114c2565b60405180910390f35b3480156101d9575f5ffd5b506101f460048036038101906101ef9190611586565b6106ed565b005b348015610201575f5ffd5b5061021c600480360381019061021791906115b1565b610817565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ec90611649565b60405180910390fd5b6103028686868686610917565b905095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f6103408989898888610917565b91505f5f73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff160361037e578290506103ca565b6103c97f0000000000000000000000000000000000000000000000000000000000000000848b73ffffffffffffffffffffffffffffffffffffffff16610d729092919063ffffffff16565b5b5f6040518060e001604052808981526020018c73ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1610151581526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018681526020015f815260200160644261044d9190611694565b81525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c1991c3183836040518363ffffffff1660e01b81526004016104ac91906117ab565b60206040518083038185885af11580156104c8573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906104ed91906117d8565b9250505097509795505050505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f6040518060e001604052808b81526020018973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1610151581526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020015f81526020016064426105a69190611694565b81525090505f5f73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16036105e757869050610633565b6106327f0000000000000000000000000000000000000000000000000000000000000000888c73ffffffffffffffffffffffffffffffffffffffff16610d729092919063ffffffff16565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c1991c3182846040518363ffffffff1660e01b815260040161068d91906117ab565b60206040518083038185885af11580156106a9573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906106ce91906117d8565b93506106dd898b8a8789610917565b9250505097509795505050505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077290611649565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90611649565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108e7576108e23382610e7f565b610913565b61091233828473ffffffffffffffffffffffffffffffffffffffff16610ecf9092919063ffffffff16565b5b5050565b5f6109228684610f4e565b5f8690505f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff160361097d577f000000000000000000000000000000000000000000000000000000000000000090505b5f8690505f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16036109d8577f000000000000000000000000000000000000000000000000000000000000000090505b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3d9061184d565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a8091906113d9565b602060405180830381865afa158015610a9b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610abf91906117d8565b90505f5f60f81b604051602001610ad691906118b6565b60405160208183030381529060405290505f848985604051602001610afd93929190611949565b60405160208183030381529060405290505f600167ffffffffffffffff811115610b2a57610b29611985565b5b604051908082528060200260200182016040528015610b5d57816020015b6060815260200190600190039081610b485790505b50905060018989845f604051602001610b7a959493929190611a31565b604051602081830303815290604052815f81518110610b9c57610b9b611a89565b5b6020026020010181905250610bf27f00000000000000000000000000000000000000000000000000000000000000008a8873ffffffffffffffffffffffffffffffffffffffff16610ecf9092919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633593564c8483606442610c3d9190611694565b6040518463ffffffff1660e01b8152600401610c5b93929190611bb9565b5f604051808303815f87803b158015610c72575f5ffd5b505af1158015610c84573d5f5f3e3d5ffd5b50505050838573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610cc291906113d9565b602060405180830381865afa158015610cdd573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0191906117d8565b610d0b9190611bfc565b96505f881115610d595787871015610d58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4f90611c79565b60405180910390fd5b5b610d638b88611003565b50505050505095945050505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b38484604051602401610da2929190611c97565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610df084826110c1565b610e7957610e6e848573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3865f604051602401610e27929190611cf7565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061111a565b610e78848261111a565b5b50505050565b5f5f5f5f5f85875af1905080610eca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec190611d68565b60405180910390fd5b505050565b610f49838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610f02929190611c97565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061111a565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fff577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b158015610fe7575f5ffd5b505af1158015610ff9573d5f5f3e3d5ffd5b50505050505b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110bd577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040161108f91906113b1565b5f604051808303815f87803b1580156110a6575f5ffd5b505af11580156110b8573d5f5f3e3d5ffd5b505050505b5050565b5f5f5f5f60205f8651602088015f8a5af192503d91505f51905082801561110f57505f82146110f3576001811461110e565b5f8673ffffffffffffffffffffffffffffffffffffffff163b115b5b935050505092915050565b5f5f60205f8451602086015f885af180611139576040513d5f823e3d81fd5b3d92505f519150505f821461115257600181141561116d565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156111af57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016111a691906113d9565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6111f76111f26111ed846111b5565b6111d4565b6111b5565b9050919050565b5f611208826111dd565b9050919050565b5f611219826111fe565b9050919050565b6112298161120f565b82525050565b5f6020820190506112425f830184611220565b92915050565b5f611252826111fe565b9050919050565b61126281611248565b82525050565b5f60208201905061127b5f830184611259565b92915050565b5f5ffd5b5f61128f826111b5565b9050919050565b61129f81611285565b81146112a9575f5ffd5b50565b5f813590506112ba81611296565b92915050565b5f62ffffff82169050919050565b6112d7816112c0565b81146112e1575f5ffd5b50565b5f813590506112f2816112ce565b92915050565b5f819050919050565b61130a816112f8565b8114611314575f5ffd5b50565b5f8135905061132581611301565b92915050565b5f5f5f5f5f60a0868803121561134457611343611281565b5b5f611351888289016112ac565b9550506020611362888289016112ac565b9450506040611373888289016112e4565b935050606061138488828901611317565b925050608061139588828901611317565b9150509295509295909350565b6113ab816112f8565b82525050565b5f6020820190506113c45f8301846113a2565b92915050565b6113d381611285565b82525050565b5f6020820190506113ec5f8301846113ca565b92915050565b5f819050919050565b611404816113f2565b811461140e575f5ffd5b50565b5f8135905061141f816113fb565b92915050565b5f5f5f5f5f5f5f60e0888a0312156114405761143f611281565b5b5f61144d8a828b016112ac565b975050602061145e8a828b016112ac565b965050604061146f8a828b016112e4565b95505060606114808a828b01611411565b94505060806114918a828b01611317565b93505060a06114a28a828b01611317565b92505060c06114b38a828b01611317565b91505092959891949750929550565b5f6040820190506114d55f8301856113a2565b6114e260208301846113a2565b9392505050565b5f5f5f5f5f5f5f60e0888a03121561150457611503611281565b5b5f6115118a828b01611411565b97505060206115228a828b016112ac565b96505060406115338a828b016112ac565b95505060606115448a828b016112e4565b94505060806115558a828b01611317565b93505060a06115668a828b01611317565b92505060c06115778a828b01611317565b91505092959891949750929550565b5f6020828403121561159b5761159a611281565b5b5f6115a8848285016112ac565b91505092915050565b5f5f604083850312156115c7576115c6611281565b5b5f6115d4858286016112ac565b92505060206115e585828601611317565b9150509250929050565b5f82825260208201905092915050565b7f554e415554484f52495a454400000000000000000000000000000000000000005f82015250565b5f611633600c836115ef565b915061163e826115ff565b602082019050919050565b5f6020820190508181035f83015261166081611627565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61169e826112f8565b91506116a9836112f8565b92508282019050808211156116c1576116c0611667565b5b92915050565b5f6116d1826113f2565b9050919050565b6116e1816116c7565b82525050565b5f8115159050919050565b6116fb816116e7565b82525050565b61170a81611285565b82525050565b611719816112f8565b82525050565b60e082015f8201516117335f8501826116d8565b50602082015161174660208501826116f2565b5060408201516117596040850182611701565b50606082015161176c6060850182611710565b50608082015161177f6080850182611710565b5060a082015161179260a0850182611710565b5060c08201516117a560c0850182611710565b50505050565b5f60e0820190506117be5f83018461171f565b92915050565b5f815190506117d281611301565b92915050565b5f602082840312156117ed576117ec611281565b5b5f6117fa848285016117c4565b91505092915050565b7f504149525f4552524f52000000000000000000000000000000000000000000005f82015250565b5f611837600a836115ef565b915061184282611803565b602082019050919050565b5f6020820190508181035f8301526118648161182b565b9050919050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b5f819050919050565b6118b06118ab8261186b565b611896565b82525050565b5f6118c1828461189f565b60018201915081905092915050565b5f8160601b9050919050565b5f6118e6826118d0565b9050919050565b5f6118f7826118dc565b9050919050565b61190f61190a82611285565b6118ed565b82525050565b5f8160e81b9050919050565b5f61192b82611915565b9050919050565b61194361193e826112c0565b611921565b82525050565b5f61195482866118fe565b6014820191506119648285611932565b60038201915061197482846118fe565b601482019150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6119f4826119b2565b6119fe81856119bc565b9350611a0e8185602086016119cc565b611a17816119da565b840191505092915050565b611a2b816116e7565b82525050565b5f60a082019050611a445f8301886113ca565b611a5160208301876113a2565b611a5e60408301866113a2565b8181036060830152611a7081856119ea565b9050611a7f6080830184611a22565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f82825260208201905092915050565b5f611af9826119b2565b611b038185611adf565b9350611b138185602086016119cc565b611b1c816119da565b840191505092915050565b5f611b328383611aef565b905092915050565b5f602082019050919050565b5f611b5082611ab6565b611b5a8185611ac0565b935083602082028501611b6c85611ad0565b805f5b85811015611ba75784840389528151611b888582611b27565b9450611b9383611b3a565b925060208a01995050600181019050611b6f565b50829750879550505050505092915050565b5f6060820190508181035f830152611bd181866119ea565b90508181036020830152611be58185611b46565b9050611bf460408301846113a2565b949350505050565b5f611c06826112f8565b9150611c11836112f8565b9250828203905081811115611c2957611c28611667565b5b92915050565b7f496e73756666696369656e74416d6f756e744f757400000000000000000000005f82015250565b5f611c636015836115ef565b9150611c6e82611c2f565b602082019050919050565b5f6020820190508181035f830152611c9081611c57565b9050919050565b5f604082019050611caa5f8301856113ca565b611cb760208301846113a2565b9392505050565b5f819050919050565b5f611ce1611cdc611cd784611cbe565b6111d4565b6112f8565b9050919050565b611cf181611cc7565b82525050565b5f604082019050611d0a5f8301856113ca565b611d176020830184611ce8565b9392505050565b7f4554485f5452414e534645525f4641494c4544000000000000000000000000005f82015250565b5f611d526013836115ef565b9150611d5d82611d1e565b602082019050919050565b5f6020820190508181035f830152611d7f81611d46565b905091905056fea26469706673582212206aaa08015f1a4bd46023214b362d64f1bb7b541c15cc2f630ed0137d8959a95464736f6c634300081c0033";

type LikwidPancakeswapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LikwidPancakeswapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LikwidPancakeswap__factory extends ContractFactory {
  constructor(...args: LikwidPancakeswapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _wrapNative: AddressLike,
    _likwidRouter: AddressLike,
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _wrapNative,
      _likwidRouter,
      router,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _wrapNative: AddressLike,
    _likwidRouter: AddressLike,
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      _wrapNative,
      _likwidRouter,
      router,
      overrides || {}
    ) as Promise<
      LikwidPancakeswap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LikwidPancakeswap__factory {
    return super.connect(runner) as LikwidPancakeswap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LikwidPancakeswapInterface {
    return new Interface(_abi) as LikwidPancakeswapInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LikwidPancakeswap {
    return new Contract(address, _abi, runner) as unknown as LikwidPancakeswap;
  }
}
