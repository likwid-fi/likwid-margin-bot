/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  LikwidPancakeswap,
  LikwidPancakeswapInterface,
} from "../LikwidPancakeswap";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_wrapNative",
        type: "address",
        internalType: "address",
      },
      {
        name: "_likwidRouter",
        type: "address",
        internalType: "contract ILikwidRouter",
      },
      {
        name: "router",
        type: "address",
        internalType: "contract IUniversalRouter",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "callers",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "likwidRouter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ILikwidRouter",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "likwidToPancakeswap",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        internalType: "address",
      },
      {
        name: "fee",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "likwidIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "likwidOutMin",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pancakesOutMin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "likwidOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pancakesOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pancakeswapToLikwid",
    inputs: [
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        internalType: "address",
      },
      {
        name: "fee",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "pancakesIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pancakesOutMin",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "likwidOutMin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "pancakesOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "likwidOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swap",
    inputs: [
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenOut",
        type: "address",
        internalType: "address",
      },
      {
        name: "fee",
        type: "uint24",
        internalType: "uint24",
      },
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amountOutMin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "universalRouter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IUniversalRouter",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "currency",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "wrapNative",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60e060405234801561000f575f5ffd5b506040516126b03803806126b08339818101604052810190610031919061029f565b83838382805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506001805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050505050610303565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101f8826101cf565b9050919050565b610208816101ee565b8114610212575f5ffd5b50565b5f81519050610223816101ff565b92915050565b5f610233826101ee565b9050919050565b61024381610229565b811461024d575f5ffd5b50565b5f8151905061025e8161023a565b92915050565b5f61026e826101ee565b9050919050565b61027e81610264565b8114610288575f5ffd5b50565b5f8151905061029981610275565b92915050565b5f5f5f5f608085870312156102b7576102b66101cb565b5b5f6102c487828801610215565b94505060206102d587828801610215565b93505060406102e687828801610250565b92505060606102f78782880161028b565b91505092959194509250565b60805160a05160c05161233d6103735f395f818161028b01528181610f300152610f7801525f81816102670152818161046b01528181610543015281816107b7015261080001525f818161035101528181610b7201528181610bcd0152818161130601526113bb015261233d5ff3fe608060405260043610610094575f3560e01c8063863f1d4911610058578063863f1d49146101895780638da5cb5b146101ba578063bd199bd3146101e4578063f2fde38b14610215578063f3fef3a31461023d5761009b565b806334dc04151461009f57806335a9e4df146100c95780633bf237d5146100f35780636ad481f3146101235780637bbf4a3f1461014d5761009b565b3661009b57005b5f5ffd5b3480156100aa575f5ffd5b506100b3610265565b6040516100c091906115b2565b60405180910390f35b3480156100d4575f5ffd5b506100dd610289565b6040516100ea91906115eb565b60405180910390f35b61010d600480360381019061010891906116ae565b6102ad565b60405161011a9190611734565b60405180910390f35b34801561012e575f5ffd5b5061013761034f565b604051610144919061175c565b60405180910390f35b348015610158575f5ffd5b50610173600480360381019061016e9190611775565b610373565b60405161018091906117ba565b60405180910390f35b6101a3600480360381019061019e9190611806565b610390565b6040516101b19291906118a3565b60405180910390f35b3480156101c5575f5ffd5b506101ce610638565b6040516101db919061175c565b60405180910390f35b6101fe60048036038101906101f991906118ca565b61065c565b60405161020c9291906118a3565b60405180910390f35b348015610220575f5ffd5b5061023b60048036038101906102369190611775565b610904565b005b348015610248575f5ffd5b50610263600480360381019061025e9190611967565b610a2e565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032e906119ff565b60405180910390fd5b6103448686868686610b2e565b905095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661041b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610412906119ff565b60405180910390fd5b6104288989898888610b2e565b91505f5f73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1603610466578290506104b2565b6104b17f0000000000000000000000000000000000000000000000000000000000000000848b73ffffffffffffffffffffffffffffffffffffffff166110f59092919063ffffffff16565b5b5f6040518061010001604052808981526020018c73ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1610151581526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018681526020015f81526020015f815260200160644261053c9190611a4a565b81525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639f769a1983836040518363ffffffff1660e01b815260040161059b9190611b6a565b60206040518083038185885af11580156105b7573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906105dc9190611b98565b92505f85111561062a5784831015610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062090611c0d565b60405180910390fd5b5b505097509795505050505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166106e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106de906119ff565b60405180910390fd5b5f6040518061010001604052808b81526020018973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff1610151581526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020015f81526020015f81526020016064426107719190611a4a565b81525090505f5f73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16036107b2578690506107fe565b6107fd7f0000000000000000000000000000000000000000000000000000000000000000888c73ffffffffffffffffffffffffffffffffffffffff166110f59092919063ffffffff16565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639f769a1982846040518363ffffffff1660e01b81526004016108589190611b6a565b60206040518083038185885af1158015610874573d5f5f3e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906108999190611b98565b93506108a8898b8a8789610b2e565b92505f8511156108f657848310156108f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ec90611c75565b60405180910390fd5b5b505097509795505050505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610992576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610989906119ff565b60405180910390fd5b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610abc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab3906119ff565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610afe57610af93382611202565b610b2a565b610b2933828473ffffffffffffffffffffffffffffffffffffffff166112529092919063ffffffff16565b5b5050565b5f610b3986846112d1565b5f8690505f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610b94577f000000000000000000000000000000000000000000000000000000000000000090505b5f8690505f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610bef577f000000000000000000000000000000000000000000000000000000000000000090505b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5490611cdd565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c97919061175c565b602060405180830381865afa158015610cb2573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd69190611b98565b905060605f600167ffffffffffffffff811115610cf657610cf5611cfb565b5b604051908082528060200260200182016040528015610d2957816020015b6060815260200190600190039081610d145790505b5090505f8962ffffff161115610dd2575f60f81b604051602001610d4d9190611d73565b60405160208183030381529060405291505f858a86604051602001610d7493929190611e06565b604051602081830303815290604052905060018989835f604051602001610d9f959493929190611eb2565b604051602081830303815290604052825f81518110610dc157610dc0611f0a565b5b602002602001018190525050610f2b565b600860f81b604051602001610de79190611d73565b60405160208183030381529060405291505f600267ffffffffffffffff811115610e1457610e13611cfb565b5b604051908082528060200260200182016040528015610e425781602001602082028036833780820191505090505b50905085815f81518110610e5957610e58611f0a565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508481600181518110610ea857610ea7611f0a565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018989835f604051602001610efc959493929190611fdf565b604051602081830303815290604052825f81518110610f1e57610f1d611f0a565b5b6020026020010181905250505b610f767f0000000000000000000000000000000000000000000000000000000000000000898773ffffffffffffffffffffffffffffffffffffffff166112529092919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633593564c8383606442610fc19190611a4a565b6040518463ffffffff1660e01b8152600401610fdf9392919061213a565b5f604051808303815f87803b158015610ff6575f5ffd5b505af1158015611008573d5f5f3e3d5ffd5b50505050828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611046919061175c565b602060405180830381865afa158015611061573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110859190611b98565b61108f919061217d565b95505f8711156110dd57868610156110dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d3906121fa565b60405180910390fd5b5b6110e78a87611386565b505050505095945050505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b38484604051602401611125929190612218565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506111738482611444565b6111fc576111f1848573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3865f6040516024016111aa929190612278565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061149d565b6111fb848261149d565b5b50505050565b5f5f5f5f5f85875af190508061124d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611244906122e9565b60405180910390fd5b505050565b6112cc838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611285929190612218565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061149d565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611382577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b15801561136a575f5ffd5b505af115801561137c573d5f5f3e3d5ffd5b50505050505b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611440577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b81526004016114129190611734565b5f604051808303815f87803b158015611429575f5ffd5b505af115801561143b573d5f5f3e3d5ffd5b505050505b5050565b5f5f5f5f60205f8651602088015f8a5af192503d91505f51905082801561149257505f82146114765760018114611491565b5f8673ffffffffffffffffffffffffffffffffffffffff163b115b5b935050505092915050565b5f5f60205f8451602086015f885af1806114bc576040513d5f823e3d81fd5b3d92505f519150505f82146114d55760018114156114f0565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561153257836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611529919061175c565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61157a61157561157084611538565b611557565b611538565b9050919050565b5f61158b82611560565b9050919050565b5f61159c82611581565b9050919050565b6115ac81611592565b82525050565b5f6020820190506115c55f8301846115a3565b92915050565b5f6115d582611581565b9050919050565b6115e5816115cb565b82525050565b5f6020820190506115fe5f8301846115dc565b92915050565b5f5ffd5b5f61161282611538565b9050919050565b61162281611608565b811461162c575f5ffd5b50565b5f8135905061163d81611619565b92915050565b5f62ffffff82169050919050565b61165a81611643565b8114611664575f5ffd5b50565b5f8135905061167581611651565b92915050565b5f819050919050565b61168d8161167b565b8114611697575f5ffd5b50565b5f813590506116a881611684565b92915050565b5f5f5f5f5f60a086880312156116c7576116c6611604565b5b5f6116d48882890161162f565b95505060206116e58882890161162f565b94505060406116f688828901611667565b93505060606117078882890161169a565b92505060806117188882890161169a565b9150509295509295909350565b61172e8161167b565b82525050565b5f6020820190506117475f830184611725565b92915050565b61175681611608565b82525050565b5f60208201905061176f5f83018461174d565b92915050565b5f6020828403121561178a57611789611604565b5b5f6117978482850161162f565b91505092915050565b5f8115159050919050565b6117b4816117a0565b82525050565b5f6020820190506117cd5f8301846117ab565b92915050565b5f819050919050565b6117e5816117d3565b81146117ef575f5ffd5b50565b5f81359050611800816117dc565b92915050565b5f5f5f5f5f5f5f60e0888a03121561182157611820611604565b5b5f61182e8a828b0161162f565b975050602061183f8a828b0161162f565b96505060406118508a828b01611667565b95505060606118618a828b016117f2565b94505060806118728a828b0161169a565b93505060a06118838a828b0161169a565b92505060c06118948a828b0161169a565b91505092959891949750929550565b5f6040820190506118b65f830185611725565b6118c36020830184611725565b9392505050565b5f5f5f5f5f5f5f60e0888a0312156118e5576118e4611604565b5b5f6118f28a828b016117f2565b97505060206119038a828b0161162f565b96505060406119148a828b0161162f565b95505060606119258a828b01611667565b94505060806119368a828b0161169a565b93505060a06119478a828b0161169a565b92505060c06119588a828b0161169a565b91505092959891949750929550565b5f5f6040838503121561197d5761197c611604565b5b5f61198a8582860161162f565b925050602061199b8582860161169a565b9150509250929050565b5f82825260208201905092915050565b7f554e415554484f52495a454400000000000000000000000000000000000000005f82015250565b5f6119e9600c836119a5565b91506119f4826119b5565b602082019050919050565b5f6020820190508181035f830152611a16816119dd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a548261167b565b9150611a5f8361167b565b9250828201905080821115611a7757611a76611a1d565b5b92915050565b5f611a87826117d3565b9050919050565b611a9781611a7d565b82525050565b611aa6816117a0565b82525050565b611ab581611608565b82525050565b611ac48161167b565b82525050565b61010082015f820151611adf5f850182611a8e565b506020820151611af26020850182611a9d565b506040820151611b056040850182611aac565b506060820151611b186060850182611abb565b506080820151611b2b6080850182611abb565b5060a0820151611b3e60a0850182611abb565b5060c0820151611b5160c0850182611abb565b5060e0820151611b6460e0850182611abb565b50505050565b5f61010082019050611b7e5f830184611aca565b92915050565b5f81519050611b9281611684565b92915050565b5f60208284031215611bad57611bac611604565b5b5f611bba84828501611b84565b91505092915050565b7f496e73756666696369656e744c696b7769644f757400000000000000000000005f82015250565b5f611bf76015836119a5565b9150611c0282611bc3565b602082019050919050565b5f6020820190508181035f830152611c2481611beb565b9050919050565b7f496e73756666696369656e7450616e63616b65734f75744d696e0000000000005f82015250565b5f611c5f601a836119a5565b9150611c6a82611c2b565b602082019050919050565b5f6020820190508181035f830152611c8c81611c53565b9050919050565b7f504149525f4552524f52000000000000000000000000000000000000000000005f82015250565b5f611cc7600a836119a5565b9150611cd282611c93565b602082019050919050565b5f6020820190508181035f830152611cf481611cbb565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b5f819050919050565b611d6d611d6882611d28565b611d53565b82525050565b5f611d7e8284611d5c565b60018201915081905092915050565b5f8160601b9050919050565b5f611da382611d8d565b9050919050565b5f611db482611d99565b9050919050565b611dcc611dc782611608565b611daa565b82525050565b5f8160e81b9050919050565b5f611de882611dd2565b9050919050565b611e00611dfb82611643565b611dde565b82525050565b5f611e118286611dbb565b601482019150611e218285611def565b600382019150611e318284611dbb565b601482019150819050949350505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611e8482611e42565b611e8e8185611e4c565b9350611e9e818560208601611e5c565b611ea781611e6a565b840191505092915050565b5f60a082019050611ec55f83018861174d565b611ed26020830187611725565b611edf6040830186611725565b8181036060830152611ef18185611e7a565b9050611f0060808301846117ab565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f611f6b8383611aac565b60208301905092915050565b5f602082019050919050565b5f611f8d82611f37565b611f978185611f41565b9350611fa283611f51565b805f5b83811015611fd2578151611fb98882611f60565b9750611fc483611f77565b925050600181019050611fa5565b5085935050505092915050565b5f60a082019050611ff25f83018861174d565b611fff6020830187611725565b61200c6040830186611725565b818103606083015261201e8185611f83565b905061202d60808301846117ab565b9695505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f82825260208201905092915050565b5f61207a82611e42565b6120848185612060565b9350612094818560208601611e5c565b61209d81611e6a565b840191505092915050565b5f6120b38383612070565b905092915050565b5f602082019050919050565b5f6120d182612037565b6120db8185612041565b9350836020820285016120ed85612051565b805f5b85811015612128578484038952815161210985826120a8565b9450612114836120bb565b925060208a019950506001810190506120f0565b50829750879550505050505092915050565b5f6060820190508181035f8301526121528186611e7a565b9050818103602083015261216681856120c7565b90506121756040830184611725565b949350505050565b5f6121878261167b565b91506121928361167b565b92508282039050818111156121aa576121a9611a1d565b5b92915050565b7f496e73756666696369656e74416d6f756e744f757400000000000000000000005f82015250565b5f6121e46015836119a5565b91506121ef826121b0565b602082019050919050565b5f6020820190508181035f830152612211816121d8565b9050919050565b5f60408201905061222b5f83018561174d565b6122386020830184611725565b9392505050565b5f819050919050565b5f61226261225d6122588461223f565b611557565b61167b565b9050919050565b61227281612248565b82525050565b5f60408201905061228b5f83018561174d565b6122986020830184612269565b9392505050565b7f4554485f5452414e534645525f4641494c4544000000000000000000000000005f82015250565b5f6122d36013836119a5565b91506122de8261229f565b602082019050919050565b5f6020820190508181035f830152612300816122c7565b905091905056fea26469706673582212205ce2cc3d326bc4a2a15ec691aa9a31ebba6ae160563bf7f098fdf0e0a8578ca164736f6c634300081c0033";

type LikwidPancakeswapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LikwidPancakeswapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LikwidPancakeswap__factory extends ContractFactory {
  constructor(...args: LikwidPancakeswapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _wrapNative: AddressLike,
    _likwidRouter: AddressLike,
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _wrapNative,
      _likwidRouter,
      router,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _wrapNative: AddressLike,
    _likwidRouter: AddressLike,
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      _wrapNative,
      _likwidRouter,
      router,
      overrides || {}
    ) as Promise<
      LikwidPancakeswap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LikwidPancakeswap__factory {
    return super.connect(runner) as LikwidPancakeswap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LikwidPancakeswapInterface {
    return new Interface(_abi) as LikwidPancakeswapInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LikwidPancakeswap {
    return new Contract(address, _abi, runner) as unknown as LikwidPancakeswap;
  }
}
