/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MarginChecker, MarginCheckerInterface } from "../MarginChecker";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ONE_MILLION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "_position",
        type: "tuple",
        internalType: "struct MarginPosition",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "marginAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "marginTotal",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "borrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rawBorrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rateCumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "hook",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "liquidated",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "amountDebt",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "positionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "liquidated",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "releaseAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "manager",
        type: "address",
        internalType: "address",
      },
      {
        name: "positionIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [
      {
        name: "liquidatedList",
        type: "bool[]",
        internalType: "bool[]",
      },
      {
        name: "releaseAmountList",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkLiquidate",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "marginForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "hook",
        type: "address",
        internalType: "address",
      },
      {
        name: "inPositions",
        type: "tuple[]",
        internalType: "struct MarginPosition[]",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "marginAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "marginTotal",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "borrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rawBorrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rateCumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatedList",
        type: "bool[]",
        internalType: "bool[]",
      },
      {
        name: "amountDebtList",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMaxDecrease",
    inputs: [
      {
        name: "_position",
        type: "tuple",
        internalType: "struct MarginPosition",
        components: [
          {
            name: "poolId",
            type: "bytes32",
            internalType: "PoolId",
          },
          {
            name: "marginForOne",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "marginAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "marginTotal",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "borrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rawBorrowAmount",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "rateCumulativeLast",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "hook",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "maxAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getReserves",
    inputs: [
      {
        name: "poolId",
        type: "bytes32",
        internalType: "PoolId",
      },
      {
        name: "marginForOne",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "hook",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "reserveBorrow",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "reserveMargin",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506040516114f33803806114f3833981016040819052602b916078565b5f80546001600160a01b0319166001600160a01b03831690811782556040518392907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3505060a3565b5f602082840312156087575f80fd5b81516001600160a01b0381168114609c575f80fd5b9392505050565b611443806100b05f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c80639869b736116100635780639869b7361461015b578063a2a5324814610173578063de2a094614610186578063eac5fdde146101a7578063f2fde38b146101ba575f80fd5b80630361d3fa1461009f5780630364d05d146100cc57806307146edd146100f657806365f62b3b146101095780638da5cb5b14610131575b5f80fd5b6100b76100ad366004610de2565b6001949350505050565b60405190151581526020015b60405180910390f35b6100df6100da366004610f93565b6101cf565b6040805192151583526020830191909152016100c3565b6100df610104366004610fca565b61043d565b61011c610117366004610ff4565b61054c565b604080519283526020830191909152016100c3565b5f54610143906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b610165620f424081565b6040519081526020016100c3565b610165610181366004610f93565b610713565b610199610194366004611033565b610882565b6040516100c39291906110b6565b6101996101b5366004611138565b610986565b6101cd6101c836600461121c565b610d1e565b005b5f805f84608001516001600160801b0316111561043657608084015160c085015184916001600160801b03169015610301575f826001600160a01b03166313ac42a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102629190611237565b8751602089015160405163ad9fccf160e01b81526001600160a01b038a811660048301526024820193909352901515604482015291169063ad9fccf190606401602060405180830381865afa1580156102bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102e19190611252565b60c08801519091506102f3828461127d565b6102fd919061129a565b9150505b5f80610315885f015189602001518961054c565b909250905081610325848361127d565b61032f919061129a565b94505f846001600160a01b03166313ac42a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561036e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103929190611237565b6001600160a01b031663707344c76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103cd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f191906112b9565b9050620f424061040662ffffff83168861127d565b610410919061129a565b89606001518a6040015161042491906112db565b6001600160801b031610965050505050505b9250929050565b60405163eb02c30160e01b8152600481018290525f908190849082906001600160a01b0383169063eb02c3019060240160e060405180830381865afa158015610488573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104ac9190611305565b90505f61051382846001600160a01b031663b55bd84d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ef573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100da9190611237565b60608401516040850151929750909250610540918391610532916112db565b6001600160801b0316610db4565b93505050509250929050565b5f805f836001600160a01b0316639ae5668c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105af9190611237565b90506001600160a01b038116610649576040516314953d3160e31b8152600481018790525f9081906001600160a01b0387169063a4a9e988906024016040805180830381865afa158015610605573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610629919061138d565b915091508661063957808261063c565b81815b909550935061070a915050565b60405163bd0b98ed60e01b8152600481018790526001600160a01b0385811660248301525f919083169063bd0b98ed906044016040805180830381865afa158015610696573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ba91906113af565b509050856106df576001600160e01b038116607082901c6001600160701b03166106f8565b607081901c6001600160701b03166001600160e01b0382165b6001600160701b039182169550169250505b50935093915050565b81516040516314953d3160e31b81525f91829182916001600160a01b0386169163a4a9e988916107499160040190815260200190565b6040805180830381865afa158015610763573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610787919061138d565b915091505f80866020015161079d5782846107a0565b83835b915091505f8288608001516001600160801b0316836107bf919061127d565b6107c9919061129a565b905087606001516001600160801b031681111561084c575f61032089606001516001600160801b0316836107fd91906113e6565b610809906103e861127d565b610813919061129a565b905088604001516001600160801b0316811015610846578089604001516001600160801b031661084391906113e6565b96505b50610877565b6103e888604001516001600160801b031661032061086a919061127d565b610874919061129a565b95505b505050505092915050565b6060808267ffffffffffffffff81111561089e5761089e610e67565b6040519080825280602002602001820160405280156108c7578160200160208202803683370190505b5091508267ffffffffffffffff8111156108e3576108e3610e67565b60405190808252806020026020018201604052801561090c578160200160208202803683370190505b5090505f5b8381101561070a575f85858381811061092c5761092c6113f9565b90506020020135905061093f878261043d565b858481518110610951576109516113f9565b6020026020010185858151811061096a5761096a6113f9565b6020908102919091010191909152901515905250600101610911565b606080835f8061099789898561054c565b915091505f836001600160a01b03166313ac42a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109fc9190611237565b6001600160a01b031663707344c76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a37573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a5b91906112b9565b90505f846001600160a01b03166313ac42a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610abe9190611237565b60405163ad9fccf160e01b81526001600160a01b038b81166004830152602482018e90528c15156044830152919091169063ad9fccf190606401602060405180830381865afa158015610b13573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b379190611252565b88519091508b9067ffffffffffffffff811115610b5657610b56610e67565b604051908082528060200260200182016040528015610b7f578160200160208202803683370190505b509750885167ffffffffffffffff811115610b9c57610b9c610e67565b604051908082528060200260200182016040528015610bc5578160200160208202803683370190505b5096505f5b8951811015610d0e575f8a8281518110610be657610be66113f9565b6020026020010151905082815f0151148015610c0957508c151581602001511515145b15610d055760808101516001600160801b031615610d0557608081015160c08201516001600160801b039091169015610c585760c0820151610c4b868361127d565b610c55919061129a565b90505b87610c63828961127d565b610c6d919061129a565b8a8481518110610c7f57610c7f6113f9565b602002602001018181525050620f42408662ffffff168b8581518110610ca757610ca76113f9565b6020026020010151610cb9919061127d565b610cc3919061129a565b82606001518360400151610cd791906112db565b6001600160801b0316108b8481518110610cf357610cf36113f9565b91151560209283029190910190910152505b50600101610bca565b5050505050505094509492505050565b5f546001600160a01b03163314610d6a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640160405180910390fd5b5f80546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b5f818310610dc25781610dc4565b825b9392505050565b6001600160a01b0381168114610ddf575f80fd5b50565b5f805f8060608587031215610df5575f80fd5b8435610e0081610dcb565b935060208501359250604085013567ffffffffffffffff811115610e22575f80fd5b8501601f81018713610e32575f80fd5b803567ffffffffffffffff811115610e48575f80fd5b876020828401011115610e59575f80fd5b949793965060200194505050565b634e487b7160e01b5f52604160045260245ffd5b60405160e0810167ffffffffffffffff81118282101715610e9e57610e9e610e67565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610ecd57610ecd610e67565b604052919050565b8015158114610ddf575f80fd5b6001600160801b0381168114610ddf575f80fd5b8035610f0181610ee2565b919050565b5f60e08284031215610f16575f80fd5b610f1e610e7b565b8235815290506020820135610f3281610ed5565b60208201526040820135610f4581610ee2565b60408201526060820135610f5881610ee2565b60608201526080820135610f6b81610ee2565b6080820152610f7c60a08301610ef6565b60a082015260c09182013591810191909152919050565b5f806101008385031215610fa5575f80fd5b610faf8484610f06565b915060e0830135610fbf81610dcb565b809150509250929050565b5f8060408385031215610fdb575f80fd5b8235610fe681610dcb565b946020939093013593505050565b5f805f60608486031215611006575f80fd5b83359250602084013561101881610ed5565b9150604084013561102881610dcb565b809150509250925092565b5f805f60408486031215611045575f80fd5b833561105081610dcb565b9250602084013567ffffffffffffffff81111561106b575f80fd5b8401601f8101861361107b575f80fd5b803567ffffffffffffffff811115611091575f80fd5b8660208260051b84010111156110a5575f80fd5b939660209190910195509293505050565b604080825283519082018190525f9060208501906060840190835b818110156110f157835115158352602093840193909201916001016110d1565b5050838103602080860191909152855180835291810192508501905f5b8181101561112c57825184526020938401939092019160010161110e565b50919695505050505050565b5f805f806080858703121561114b575f80fd5b84359350602085013561115d81610ed5565b9250604085013561116d81610dcb565b9150606085013567ffffffffffffffff811115611188575f80fd5b8501601f81018713611198575f80fd5b803567ffffffffffffffff8111156111b2576111b2610e67565b6111c160208260051b01610ea4565b80828252602082019150602060e084028501019250898311156111e2575f80fd5b6020840193505b8284101561120e576111fb8a85610f06565b825260208201915060e0840193506111e9565b969995985093965050505050565b5f6020828403121561122c575f80fd5b8135610dc481610dcb565b5f60208284031215611247575f80fd5b8151610dc481610dcb565b5f60208284031215611262575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761129457611294611269565b92915050565b5f826112b457634e487b7160e01b5f52601260045260245ffd5b500490565b5f602082840312156112c9575f80fd5b815162ffffff81168114610dc4575f80fd5b6001600160801b03818116838216019081111561129457611294611269565b8051610f0181610ee2565b5f60e0828403128015611316575f80fd5b5061131f610e7b565b82518152602083015161133181610ed5565b6020820152611342604084016112fa565b6040820152611353606084016112fa565b6060820152611364608084016112fa565b608082015261137560a084016112fa565b60a082015260c0928301519281019290925250919050565b5f806040838503121561139e575f80fd5b505080516020909101519092909150565b5f80604083850312156113c0575f80fd5b82516001600160e01b03811681146113d6575f80fd5b6020939093015192949293505050565b8181038181111561129457611294611269565b634e487b7160e01b5f52603260045260245ffdfea264697066735822122082db7d32d60380e6bf2cfe269c40c91c1d1c14d0853ae373836041992982896e64736f6c634300081a0033";

type MarginCheckerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarginCheckerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarginChecker__factory extends ContractFactory {
  constructor(...args: MarginCheckerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MarginChecker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MarginChecker__factory {
    return super.connect(runner) as MarginChecker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarginCheckerInterface {
    return new Interface(_abi) as MarginCheckerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MarginChecker {
    return new Contract(address, _abi, runner) as unknown as MarginChecker;
  }
}
